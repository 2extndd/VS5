#!/usr/bin/env python3
"""
Quick Database Test - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
"""

import sys
import os
import time

# Add current directory to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_quick_database():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ë–î"""
    print("üèÉ‚Äç‚ôÇÔ∏è –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 40)
    
    try:
        import db
        print("‚úÖ –ú–æ–¥—É–ª—å db –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # Test connection
        conn, db_type = db.get_db_connection()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {db_type} —É—Å–ø–µ—à–Ω–æ")
        conn.close()
        
        # Test if we have any queries
        queries = db.get_queries()
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(queries)} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î")
        
        if not queries:
            print("‚ö†Ô∏è  –ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î - –¥–æ–±–∞–≤–ª—é —Ç–µ—Å—Ç–æ–≤—ã–π")
            db.add_query_to_db("https://www.vinted.de/catalog?order=newest_first&test_quick=true", "Quick Test")
            queries = db.get_queries()
            
        # Use first available query
        query_id = queries[0][0]
        print(f"üìù –ò—Å–ø–æ–ª—å–∑—É—é query_id: {query_id}")
        
        # Test adding item with decimal price
        test_items = [
            ("quick_test_1", "Quick Test Item", 15.99, "EUR"),
            ("quick_test_2", "Another Test", 29.50, "USD"),
        ]
        
        print("\nüí∞ –¢–µ—Å—Ç–∏—Ä—É—é –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏...")
        
        for item_id, title, price, currency in test_items:
            timestamp = int(time.time())
            photo_url = f"https://example.com/{item_id}.jpg"
            
            try:
                db.add_item_to_db(
                    id=item_id,
                    title=title,
                    query_id=query_id, 
                    price=price,
                    timestamp=timestamp,
                    photo_url=photo_url,
                    currency=currency
                )
                print(f"   ‚úÖ {title} - {price} {currency} –¥–æ–±–∞–≤–ª–µ–Ω")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {title}: {e}")
                return False
        
        # Test retrieval
        print("\nüì• –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...")
        items = db.get_items(limit=5)
        
        if items:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(items)} —Ç–æ–≤–∞—Ä–æ–≤:")
            for item in items[:3]:
                item_id, title, price, currency = item[0], item[1], item[2], item[3]
                print(f"   üõçÔ∏è  {title}: {price} {currency}")
        else:
            print("‚ö†Ô∏è  –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        # Cleanup
        print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        conn, db_type = db.get_db_connection()
        cursor = conn.cursor()
        
        if db_type == 'postgresql':
            cursor.execute("DELETE FROM items WHERE item LIKE 'quick_test_%'")
            cursor.execute("DELETE FROM queries WHERE query LIKE '%test_quick=true%'")
            conn.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
        
        conn.close()
        
        print("\nüéâ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_quick_database()
    if not success:
        sys.exit(1)