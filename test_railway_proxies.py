#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway
"""

import os
import sys
import requests
import time
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import db
import proxies
from logger import get_logger

logger = get_logger(__name__)

def check_railway_proxies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        conn, db_type = db.get_db_connection()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {db_type}")
        conn.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –≤ –ë–î
    print("\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    
    proxy_list = db.get_parameter("proxy_list")
    if proxy_list:
        print(f"‚úÖ proxy_list: {proxy_list[:100]}...")
    else:
        print("‚ùå proxy_list –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    proxy_list_link = db.get_parameter("proxy_list_link")
    if proxy_list_link:
        print(f"‚úÖ proxy_list_link: {proxy_list_link}")
    else:
        print("‚ùå proxy_list_link –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ get_random_proxy
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_random_proxy():")
    try:
        proxy = proxies.get_random_proxy()
        if proxy:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –ø—Ä–æ–∫—Å–∏: {proxy[:50]}...")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏ —Å Vinted
            print("\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ —Å Vinted:")
            proxy_dict = proxies.convert_proxy_string_to_dict(proxy)
            
            session = requests.Session()
            session.proxies.update(proxy_dict)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            session.headers.update({
                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36",
                "Accept": "application/json, text/plain, */*",
                "Accept-Language": "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7",
                "Accept-Encoding": "gzip, deflate, br, zstd",
                "Connection": "keep-alive"
            })
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å Vinted
            test_url = "https://www.vinted.de/api/v2/catalog/items?search_text=&catalog_ids=19&brand_ids=212366&currency=EUR&price_to=50&page=1&per_page=2&order=newest_first"
            
            print(f"üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º URL: {test_url}")
            
            response = session.get(test_url, timeout=10)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                print("‚úÖ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Vinted!")
                data = response.json()
                print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(data.get('items', []))}")
            elif response.status_code == 403:
                print("‚ùå Vinted –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å (403 Forbidden)")
                print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
                print("   - Vinted –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª IP –ø—Ä–æ–∫—Å–∏")
                print("   - –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
                print("   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏")
            else:
                print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        else:
            print("‚ùå get_random_proxy() –≤–µ—Ä–Ω—É–ª None")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Railway
    print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Railway:")
    print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: railway logs | grep -i 'proxy\\|403\\|forbidden' | tail -10")

if __name__ == "__main__":
    check_railway_proxies() 