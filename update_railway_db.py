import os
import sys
import psycopg2
from urllib.parse import urlparse

# –ü–æ–ª—É—á–∞–µ–º DATABASE_URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway
database_url = os.environ.get('DATABASE_URL')
if not database_url:
    print('‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω')
    sys.exit(1)

print(f'üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ: {database_url[:30]}...')

try:
    # –ü–∞—Ä—Å–∏–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    url = urlparse(database_url)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ PostgreSQL
    conn = psycopg2.connect(
        host=url.hostname,
        port=url.port,
        user=url.username,
        password=url.password,
        database=url.path[1:]  # —É–±–∏—Ä–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π /
    )
    
    cursor = conn.cursor()
    
    print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    cursor.execute('SELECT key, value FROM parameters')
    current_params = dict(cursor.fetchall())
    
    print('\nüìã –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:')
    for key, value in current_params.items():
        if len(str(value)) > 50:
            print(f'  {key}: {str(value)[:50]}...')
        else:
            print(f'  {key}: {value}')
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    updates = {
        'enable_logging': 'True',
        'query_refresh_delay': '300',  # 5 –º–∏–Ω—É—Ç
        'max_retries': '3',
        'request_timeout': '30',
        'items_per_query': '2'
    }
    
    print('\nüîß –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...')
    
    for key, value in updates.items():
        cursor.execute('''
            INSERT INTO parameters (key, value) 
            VALUES (%s, %s) 
            ON CONFLICT (key) 
            DO UPDATE SET value = EXCLUDED.value
        ''', (key, value))
        print(f'  ‚úÖ {key} = {value}')
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    conn.commit()
    
    print('\nüéâ –í–°–ï –ü–ê–†–ê–ú–ï–¢–†–´ –û–ë–ù–û–í–õ–ï–ù–´!')
    print('–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å')
    
    cursor.close()
    conn.close()
    
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
    sys.exit(1)