#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway
"""

import requests
import re
import json

def check_railway_proxies_detailed():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway"""
    print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∫—Å–∏ –Ω–∞ Railway...")
    print("=" * 50)
    
    # URL Railway
    base_url = "https://vs5-production.up.railway.app"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_url = f"{base_url}/config"
        response = requests.get(config_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
            
            html_content = response.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Proxy List
            proxy_list_match = re.search(r'name="proxy_list".*?value="(.*?)"', html_content, re.DOTALL)
            if proxy_list_match:
                proxy_list_value = proxy_list_match.group(1)
                print(f"üìã Proxy List:")
                print(f"  ‚Ä¢ –î–ª–∏–Ω–∞: {len(proxy_list_value)} —Å–∏–º–≤–æ–ª–æ–≤")
                if len(proxy_list_value) > 0:
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Å–∏
                    proxy_count = len(proxy_list_value.split('\n'))
                    print(f"  ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {proxy_count}")
                    print(f"  ‚Ä¢ –ù–∞—á–∞–ª–æ: {proxy_list_value[:100]}...")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏
                    first_proxy = proxy_list_value.split('\n')[0] if proxy_list_value else ""
                    if '@' in first_proxy and ':' in first_proxy:
                        print(f"  ‚Ä¢ –§–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏: ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π")
                    else:
                        print(f"  ‚Ä¢ –§–æ—Ä–º–∞—Ç –ø—Ä–æ–∫—Å–∏: ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
                else:
                    print(f"  ‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚ùå –ü—É—Å—Ç–æ–π")
            else:
                print(f"  ‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Check Proxies
            check_proxies_match = re.search(r'name="check_proxies".*?checked', html_content, re.DOTALL)
            if check_proxies_match:
                print(f"üìã Check Proxies: ‚úÖ –í–∫–ª—é—á–µ–Ω")
            else:
                print(f"üìã Check Proxies: ‚ùå –í—ã–∫–ª—é—á–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Proxy List Link
            proxy_link_match = re.search(r'name="proxy_list_link".*?value="(.*?)"', html_content, re.DOTALL)
            if proxy_link_match:
                proxy_link_value = proxy_link_match.group(1)
                if proxy_link_value:
                    print(f"üìã Proxy List Link: ‚úÖ {proxy_link_value}")
                else:
                    print(f"üìã Proxy List Link: ‚ùå –ü—É—Å—Ç–æ–π")
            else:
                print(f"üìã Proxy List Link: ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway: {e}")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ï—Å–ª–∏ Proxy List –ø—É—Å—Ç–æ–π - –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–æ–∫—Å–∏")
    print("2. –ï—Å–ª–∏ Check Proxies –≤—ã–∫–ª—é—á–µ–Ω - –≤–∫–ª—é—á–∏—Ç–µ –µ–≥–æ")
    print("3. –ï—Å–ª–∏ –ø—Ä–æ–∫—Å–∏ –µ—Å—Ç—å, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://vs5-production.up.railway.app/logs")
    print("2. –ò—â–∏—Ç–µ –∑–∞–ø–∏—Å–∏ —Å 'proxy', '403', 'forbidden'")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ 'Using proxy' –∏–ª–∏ 'get_random_proxy'")

def check_railway_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Railway"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ Railway...")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–æ–≤
        logs_url = "https://vs5-production.up.railway.app/logs"
        response = requests.get(logs_url, timeout=10)
        
        if response.status_code == 200:
            print("‚úÖ –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
            
            # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –æ –ø—Ä–æ–∫—Å–∏
            html_content = response.text
            
            # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            log_entries = re.findall(r'<div class="log-entry">(.*?)</div>', html_content, re.DOTALL)
            
            if log_entries:
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(log_entries)} –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–∞—Ö")
                
                # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –æ –ø—Ä–æ–∫—Å–∏
                proxy_entries = [entry for entry in log_entries if 'proxy' in entry.lower()]
                if proxy_entries:
                    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(proxy_entries)} –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ–∫—Å–∏")
                    for entry in proxy_entries[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                        print(f"  ‚Ä¢ {entry[:100]}...")
                else:
                    print("‚ùå –ó–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
                # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –æ 403 –æ—à–∏–±–∫–∞—Ö
                error_entries = [entry for entry in log_entries if '403' in entry or 'forbidden' in entry.lower()]
                if error_entries:
                    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(error_entries)} –∑–∞–ø–∏—Å–µ–π –æ–± –æ—à–∏–±–∫–∞—Ö 403")
                    for entry in error_entries[-3:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3
                        print(f"  ‚Ä¢ {entry[:100]}...")
                else:
                    print("‚úÖ –ó–∞–ø–∏—Å–µ–π –æ–± –æ—à–∏–±–∫–∞—Ö 403 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print("‚ùå –ó–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–≥–∞–º: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {e}")

if __name__ == "__main__":
    check_railway_proxies_detailed()
    check_railway_logs() 