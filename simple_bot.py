#!/usr/bin/env python3
"""
–ü–†–û–°–¢–û–ô –ë–û–¢ –ë–ï–ó –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–û–í –ò –ü–†–û–¶–ï–°–°–û–í
–†–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–¥–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é
"""
import time
import sys
import os
import db
import core
import queue
import threading
from logger import get_logger

logger = get_logger(__name__)

def scan_worker():
    """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    items_queue = queue.Queue()
    
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∏–∑ –±–∞–∑—ã
            delay = db.get_parameter("query_refresh_delay")
            delay_seconds = int(delay) if delay else 30
            
            logger.info(f"üîÑ –ó–∞–ø—É—Å–∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {delay_seconds}—Å)")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            result = core.process_items(items_queue)
            logger.info(f"‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {result}")
            
            # –ñ–¥–µ–º
            logger.info(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {delay_seconds} —Å–µ–∫—É–Ω–¥...")
            time.sleep(delay_seconds)
            
        except Exception as e:
            logger.error(f"üí• –û–®–ò–ë–ö–ê –í –°–ö–ê–ù–ï–†–ï: {e}")
            import traceback
            logger.error(f"Traceback: {traceback.format_exc()}")
            time.sleep(10)  # –ñ–¥–µ–º 10 —Å–µ–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ

def main():
    logger.info("üöÄ –ó–ê–ü–£–°–ö –ü–†–û–°–¢–û–ì–û –ë–û–¢–ê")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
    try:
        conn, db_type = db.get_db_connection()
        conn.close()
        logger.info(f"–ë–∞–∑–∞: {db_type}")
        
        if db_type == 'postgresql':
            db.create_or_update_db("initial_db.sql")
            logger.info("PostgreSQL –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –±–∞–∑—ã: {e}")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
    scan_thread = threading.Thread(target=scan_worker, daemon=True)
    scan_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Web UI –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    logger.info("üåê –ó–∞–ø—É—Å–∫ Web UI...")
    port = int(os.environ.get('PORT', 8080))
    
    from web_ui_plugin.web_ui import app
    logger.info(f"Web UI —Å—Ç–∞—Ä—Ç—É–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port, debug=False)

if __name__ == "__main__":
    main()