#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Vinted API –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import json
import db
from pyVintedVN.requester import requester
from pyVintedVN.items.items import Items
from logger import get_logger

logger = get_logger(__name__)

def test_direct_vinted_request():
    """–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ Vinted API –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    print("üîç –¢–ï–°–¢ –ü–†–Ø–ú–û–ì–û –ó–ê–ü–†–û–°–ê –ö VINTED API...")
    
    url = "https://www.vinted.de/api/v2/catalog/items"
    params = {
        'catalog_ids': '19',
        'price_to': '50.0', 
        'currency': 'EUR',
        'brand_ids': '212366',
        'order': 'newest_first',
        'per_page': 5,
        'page': 1
    }
    
    headers = {
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "de-DE,de;q=0.9,en-US;q=0.8,en;q=0.7",
        "Accept-Encoding": "gzip, deflate, br, zstd", 
        "Connection": "keep-alive",
        "Sec-Fetch-Dest": "empty", 
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Site": "same-origin",
        "Sec-Ch-Ua": '"Google Chrome";v="131", "Chromium";v="131", "Not_A Brand";v="24"',
        "Sec-Ch-Ua-Mobile": "?0",
        "Sec-Ch-Ua-Platform": '"Windows"',
        "Cache-Control": "no-cache",
        "Pragma": "no-cache",
        "Referer": "https://www.vinted.de/",
        "Origin": "https://www.vinted.de",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
    }
    
    print(f"üì° URL: {url}")
    print(f"üìã Params: {params}")
    
    try:
        response = requests.get(url, params=params, headers=headers, timeout=30)
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print(f"Status: {response.status_code}")
        print(f"Headers: {dict(response.headers)}")
        print(f"Content-Type: {response.headers.get('content-type', 'unknown')}")
        print(f"Response Length: {len(response.text)}")
        print(f"Response Text (first 500 chars):\n{response.text[:500]}")
        
        if response.status_code == 200:
            try:
                json_data = response.json()
                if 'items' in json_data:
                    print(f"\n‚úÖ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω–æ {len(json_data['items'])} —Ç–æ–≤–∞—Ä–æ–≤")
                    for i, item in enumerate(json_data['items'][:3]):
                        print(f"  {i+1}. {item.get('title', 'No title')} - {item.get('price', 'No price')}")
                    return True
                else:
                    print(f"\n‚ö†Ô∏è  200 OK, –Ω–æ –Ω–µ—Ç 'items' –≤ –æ—Ç–≤–µ—Ç–µ")
                    print(f"–ö–ª—é—á–∏ –æ—Ç–≤–µ—Ç–∞: {list(json_data.keys())}")
            except json.JSONDecodeError as e:
                print(f"\n‚ùå JSON –ø–∞—Ä—Å–∏–Ω–≥ failed: {e}")
        
        return False
        
    except Exception as e:
        print(f"\nüí• –û–®–ò–ë–ö–ê –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_requester_class():
    """–¢–µ—Å—Ç –∫–ª–∞—Å—Å–∞ requester"""
    print("\nüîß –¢–ï–°–¢ –ö–õ–ê–°–°–ê REQUESTER...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä requester
        from pyVintedVN.requester import requester as requester_class
        req = requester_class(debug=True)
        print("‚úÖ Requester —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ get
        url = "https://www.vinted.de/api/v2/catalog/items"
        params = {
            'catalog_ids': '19',
            'price_to': '50.0',
            'currency': 'EUR', 
            'brand_ids': '212366',
            'order': 'newest_first',
            'per_page': 5,
            'page': 1
        }
        
        print(f"üì° –î–µ–ª–∞—é –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ requester...")
        response = req.get(url, params=params)
        
        print(f"üìä Status: {response.status_code}")
        print(f"üìÑ Response Length: {len(response.text)}")
        print(f"üìÑ Response Text (first 300 chars): {response.text[:300]}")
        
        if response.status_code == 200:
            try:
                json_data = response.json()
                if 'items' in json_data:
                    print(f"‚úÖ REQUESTER –†–ê–ë–û–¢–ê–ï–¢! –ù–∞–π–¥–µ–Ω–æ {len(json_data['items'])} —Ç–æ–≤–∞—Ä–æ–≤")
                    return True
                else:
                    print(f"‚ö†Ô∏è  200 OK —á–µ—Ä–µ–∑ requester, –Ω–æ –Ω–µ—Ç items")
            except:
                print(f"‚ùå JSON –ø–∞—Ä—Å–∏–Ω–≥ —á–µ—Ä–µ–∑ requester failed")
        
        return False
        
    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê –≤ requester: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_items_class():
    """–¢–µ—Å—Ç –∫–ª–∞—Å—Å–∞ Items –∏–∑ pyVintedVN"""
    print("\nüì¶ –¢–ï–°–¢ –ö–õ–ê–°–°–ê ITEMS...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Items
        items = Items()
        print("‚úÖ Items –∫–ª–∞—Å—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        test_url = "https://www.vinted.de/catalog?catalog%5B%5D=19&price_to=50.0&currency=EUR&brand_ids%5B%5D=212366&order=newest_first"
        
        print(f"üîç –ü–æ–∏—Å–∫ –ø–æ URL: {test_url}")
        results = items.search(test_url)
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results) if results else 0}")
        
        if results and len(results) > 0:
            print(f"‚úÖ ITEMS.SEARCH –†–ê–ë–û–¢–ê–ï–¢! –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ç–æ–≤–∞—Ä–æ–≤")
            for i, item in enumerate(results[:3]):
                print(f"  {i+1}. {item.title} - {item.price} {item.currency}")
            return True
        else:
            print(f"‚ùå Items.search –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        
        return False
        
    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê –≤ Items: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_database_queries():
    """–¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è  –¢–ï–°–¢ –ó–ê–ü–†–û–°–û–í –ò–ó –ë–î...")
    
    try:
        queries = db.get_queries()
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(queries)} –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ë–î:")
        
        for i, query in enumerate(queries):
            print(f"  {i+1}. ID:{query[0]} - {query[1][:60]}...")
            
        return queries
        
    except Exception as e:
        print(f"üí• –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
        return []

if __name__ == "__main__":
    print("üöÄ –°–¢–ê–†–¢ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò VINTED API\n")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    try:
        db.get_db_connection()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ\n")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    results = {}
    
    results['direct'] = test_direct_vinted_request()
    results['requester'] = test_requester_class()  
    results['items'] = test_items_class()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ë–î
    queries = test_database_queries()
    
    print(f"\nüìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"üîç –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å: {'‚úÖ' if results['direct'] else '‚ùå'}")
    print(f"üîß Requester –∫–ª–∞—Å—Å: {'‚úÖ' if results['requester'] else '‚ùå'}")
    print(f"üì¶ Items –∫–ª–∞—Å—Å: {'‚úÖ' if results['items'] else '‚ùå'}")
    print(f"üóÑÔ∏è  –ó–∞–ø—Ä–æ—Å—ã –≤ –ë–î: {len(queries)}")
    
    if not any(results.values()):
        print(f"\nüö® –í–°–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨ - VINTED API –ù–ï–î–û–°–¢–£–ü–ï–ù!")
    else:
        print(f"\nüéØ –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò - –ü–†–û–ë–õ–ï–ú–ê –í –ö–û–ù–ö–†–ï–¢–ù–û–ú –ö–û–ú–ü–û–ù–ï–ù–¢–ï")
    
    print("\nüèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")